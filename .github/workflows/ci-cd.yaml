name: ci-cd

on:
  workflow_dispatch:

  push:
    branches:
      - "main"

  pull_request:
    types: [opened, synchronize, reopened]

env:
  EKS_CLUSTER_NAME: eks-ze-burguer
  AWS_REGION: us-east-1

jobs:
  tests:
    name: Run Tests 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: '1.21'
      - name: Script to remove
        run: |
          chmod +x remove_exceptions.sh
      - name: Generate coverage file
        run: |
           go test $(./remove_exceptions.sh) -coverprofile cover.out
      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cover.out
  
  sonarcloud:
    name: SonarCloud
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Download code coverage results
        uses: actions/download-artifact@v1
        with:
          name: code-coverage-report
          path: cover.out

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  build:
    name: Build 
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [sonarcloud]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./infra/prod/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ze_burguer_production:latest

  deploy:
    name: Deploy
    needs: [build] 
    runs-on: ubuntu-latest

    steps:
    - name: Check out
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_session_token: ${{ secrets.AWS_SESSION_TOKEN}}
        aws-region: ${{env.AWS_REGION}}

    - name: Update kube config
      id: config-kubectl
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Deploy App to EKS
      if: steps.config-kubectl.outcome == 'success'
      run: |
        kubectl apply -k kustomize/
